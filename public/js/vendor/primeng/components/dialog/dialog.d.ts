import { ElementRef, AfterViewInit, AfterViewChecked, OnDestroy, EventEmitter, Renderer } from '@angular/core';
import { DomHandler } from '../dom/domhandler';
export declare class Dialog implements AfterViewInit, AfterViewChecked, OnDestroy {
    protected el: ElementRef;
    protected domHandler: DomHandler;
    protected renderer: Renderer;
    header: string;
    draggable: boolean;
    resizable: boolean;
    minWidth: number;
    minHeight: number;
    width: any;
    height: any;
    contentHeight: any;
    modal: boolean;
    showEffect: string;
    closeOnEscape: boolean;
    rtl: boolean;
    closable: boolean;
    responsive: boolean;
    appendTo: any;
    headerFacet: any;
    onBeforeShow: EventEmitter<any>;
    onAfterShow: EventEmitter<any>;
    onBeforeHide: EventEmitter<any>;
    onAfterHide: EventEmitter<any>;
    visibleChange: EventEmitter<any>;
    _visible: boolean;
    dragging: boolean;
    documentDragListener: any;
    resizing: boolean;
    documentResizeListener: any;
    documentResizeEndListener: any;
    documentResponsiveListener: any;
    documentEscapeListener: any;
    lastPageX: number;
    lastPageY: number;
    mask: any;
    shown: boolean;
    contentContainer: any;
    positionInitialized: boolean;
    constructor(el: ElementRef, domHandler: DomHandler, renderer: Renderer);
    visible: boolean;
    ngAfterViewInit(): void;
    ngAfterViewChecked(): void;
    center(): void;
    enableModality(): void;
    disableModality(): void;
    hide(event: any): void;
    moveOnTop(): void;
    initDrag(event: any): void;
    onDrag(event: any): void;
    endDrag(event: any): void;
    initResize(event: any): void;
    onResize(event: any): void;
    ngOnDestroy(): void;
}
export declare class DialogModule {
}
