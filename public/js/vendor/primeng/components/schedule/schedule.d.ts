import { ElementRef, AfterViewInit, OnDestroy, DoCheck, EventEmitter, IterableDiffers } from '@angular/core';
export declare class Schedule implements AfterViewInit, DoCheck, OnDestroy {
    protected el: ElementRef;
    events: any[];
    header: any;
    style: any;
    styleClass: string;
    rtl: boolean;
    weekends: boolean;
    hiddenDays: number[];
    fixedWeekCount: boolean;
    weekNumbers: boolean;
    businessHours: any;
    height: any;
    contentHeight: any;
    aspectRatio: number;
    eventLimit: any;
    defaultDate: any;
    editable: boolean;
    eventStartEditable: boolean;
    eventDurationEditable: boolean;
    defaultView: string;
    allDaySlot: boolean;
    allDayText: string;
    slotDuration: any;
    slotLabelInterval: any;
    snapDuration: any;
    scrollTime: any;
    minTime: any;
    maxTime: any;
    slotEventOverlap: boolean;
    nowIndicator: boolean;
    dragRevertDuration: number;
    dragOpacity: number;
    dragScroll: boolean;
    eventOverlap: any;
    eventConstraint: any;
    locale: any;
    eventRender: Function;
    onDayClick: EventEmitter<any>;
    onEventClick: EventEmitter<any>;
    onEventMouseover: EventEmitter<any>;
    onEventMouseout: EventEmitter<any>;
    onEventDragStart: EventEmitter<any>;
    onEventDragStop: EventEmitter<any>;
    onEventDrop: EventEmitter<any>;
    onEventResizeStart: EventEmitter<any>;
    onEventResizeStop: EventEmitter<any>;
    onEventResize: EventEmitter<any>;
    viewRender: EventEmitter<any>;
    initialized: boolean;
    stopNgOnChangesPropagation: boolean;
    differ: any;
    schedule: any;
    constructor(el: ElementRef, differs: IterableDiffers);
    ngAfterViewInit(): void;
    ngDoCheck(): void;
    ngOnDestroy(): void;
    gotoDate(date: any): void;
    prev(): void;
    next(): void;
    prevYear(): void;
    nextYear(): void;
    today(): void;
    incrementDate(duration: any): void;
    getDate(): any;
}
export declare class ScheduleModule {
}
